# Create a custom access key badge specifying permissions (example granting CreateNativeProof + UpdateFee)
# Permission enum values are part of the package runtime. We show the idea; adapt to the required value encodings when building the manifest.

CALL_METHOD Address("${account}") "lock_fee" Decimal("100");
CALL_METHOD Address("${account}") "create_proof_of_non_fungibles" Address("${access_manager_badge}") Array<NonFungibleLocalId>(NonFungibleLocalId("${access_manager_badge_id}"));

POP_FROM_AUTH_ZONE Proof("proof_id");

# Example: construct permissions array using enum names. Replace with correct runtime encoding if required.
CALL_METHOD
    Address("${component}")
    "create_custom_access_key_badge"
    Array<String>("CreateNativeProof", "UpdateKey")
    Proof("proof_id");

# Create another proof to use to deposit the key badge to the target account, note that the previous proof was passed by intent to the component and it is no longer valid
CALL_METHOD Address("${account}") "create_proof_of_non_fungibles" Address("${access_manager_badge}") Array<NonFungibleLocalId>(NonFungibleLocalId("${access_manager_badge_id}"));

CALL_METHOD Address("${account2}") "try_deposit_batch_or_abort" Expression("ENTIRE_WORKTOP") None;
